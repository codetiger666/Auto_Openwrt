# This is a basic workflow to help you get started with Actions

name: Build_x86_64_openwrt

# The type of start
on:

  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'

  schedule:
    - cron: 0 10 * * *
  #push:
  #  branches: [ main ]
  # pull_request:
  #   branches: [ main ]

env:
  env:
  CONFIG_FILE: x86_64.conf
  DRIVE_LABLE: x86_64
  UPLOAD_RELEASE: true
  UPLOAD_FIRMWARE: true
  UPLOAD_BIN_DIR: false
  REMOVE_OLD_RELEASE: true
  REMOVE_WORKFLOW_RUNS: true
  KERNEL_HASH: 57dcfbca1f3225678d24912f782b4e67

# define workflow
jobs:
  build:
    runs-on: ubuntu-20.04

    # define steps
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo apt remove php* dotnet* google* 
          docker rmi `docker images -q`
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php \
            /usr/local/lib/android
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get clean
          sudo -E apt-get install dos2unix -y
          sudo -E apt-get -y autoremove --purge
          cd
          release=$(curl https://api.github.com/repos/openwrt/openwrt/releases/latest | grep tag_name | awk 'END {print}' | awk -F ":" '{print $2}' | awk -F "[\"\"]" '{print $2}' | awk -F "v" '{print $2}')
          version=$(echo $release | awk -F "." '{print$1}')
          tag=$(echo $release | awk -F "." '{print$2}')
          if (( $(echo "${version} == 21") & $(echo "${tag} == 02") )); then
              KERNEL_HASH=`curl https://downloads.openwrt.org/releases/$release/targets/x86/64/openwrt-$release-x86-64.manifest | grep kernel | awk -F "-" '{print $4}'`
          fi
          echo "export openwrt_tag=$release" >> .profile
          echo "export DRIVE_LABLE=$DRIVE_LABLE" >> .profile
          echo "export KERNEL_HASH=$KERNEL_HASH" >> .profile
          source .profile
      - name: Clone Openwrt source code
        run: |
          release=$(curl https://api.github.com/repos/openwrt/openwrt/releases/latest | grep tag_name | awk 'END {print}' | awk -F ":" '{print $2}' | awk -F "[\"\"]" '{print $2}' | awk -F "v" '{print $2}')
          git clone -b v$release https://github.com/openwrt/openwrt.git
      - name: Update & Install Feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Run Diy-Part1 Scripts
        run: |
          source scripts/BaseScripts.sh
          source $HOME/.profile
          Core_x86_64
          Diy-Part1
          echo "Artifacts_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
      - name: make defconfig
        run: |
          [ -f $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          cd openwrt
          make defconfig
      - name: Download Packages
        working-directory: ./openwrt
        run: |
          make download -j V=s
      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@main
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      - name: Compile the Openwrt
        working-directory: ./openwrt
        run: |
          dos2unix *
          make -j4 V=s
      # - name: Run Diy-Part3 Scripts
      #   run: |
      #     echo "## $(date +"%Y%m%d")" > update_log.txt
      #     cd openwrt
      #     source $GITHUB_WORKSPACE/$DIY_SCRIPT
      #     source $GITHUB_WORKSPACE/$FUNCTION_SCRIPT && Diy-Part3
      #     echo "Artifacts_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Recompile the Openwrt 
        working-directory: ./openwrt
        if: failure()
        run: |
          make -j1 V=s

      - name: Upload Firmware to Artifacts
        uses: actions/upload-artifact@main
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          name: OpenWrt_Firmware_${{ env.Artifacts_DATE }}
          path: openwrt/bin
          
      - name: copy file to Releases
        working-directory: ./openwrt
        run: |
          source ../scripts/BaseScripts.sh
          Diy-Part2_x86_64
          
      - name: Remove old Releases
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        if: env.REMOVE_OLD_RELEASE == 'true' && !cancelled()
        with:
          tag_name: openwrt_x86_64 #(required) tag name to delete 
          delete_release: true #(optional) default: true 
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Upload Firmware to Releases
        uses: softprops/action-gh-release@v1
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: openwrt_x86_64
          files: openwrt/bin/Firmware/*

          


      - name: Remove workflow runs
        uses: GitRML/delete-workflow-runs@main
        if: env.REMOVE_WORKFLOW_RUNS == 'true' && !cancelled()
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: SSH connection to Actions1
        uses: P3TERX/ssh2actions@main
        if: failure()
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
